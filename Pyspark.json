{"paragraphs":[{"text":"%spark2.pyspark\n\n# defining the spark session\n# spark session is a unified entry poit of spark applcation> It connects spark application to spark cluster\n# spark session is a single replacment for spark context, hive context, sql context\nfrom pyspark.sql import SparkSession\n#spark=SparkSession.builder.appName(\"basics\").getOrCreate()\nspark = (SparkSession.builder.appName('Hands_On')\n                .enableHiveSupport()\n                .getOrCreate()\n                )\n\n# reading a file from local directory\ndf=spark.read.csv('file:///sasshared/hybris_data/TN_ITM_REV_HC.csv',header=True)\ndf.show(5)\n# checking the data types\ndf.printSchema()\ndel df","user":"vinay.hugar","dateUpdated":"2021-02-03T03:02:09+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sasprdos.lmggi.com:4052/jobs/job?id=0","http://sasprdos.lmggi.com:4052/jobs/job?id=1"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1610480372960_-1768578467","id":"20210113-010932_1604242455","dateCreated":"2021-01-13T01:09:32+0530","dateStarted":"2021-02-03T03:02:09+0530","dateFinished":"2021-02-03T03:02:43+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:44870"},{"text":"%spark2.pyspark\n# Importing some in-built functions to efficiently import the data\n# defining the StructType i.e datatype of each varable that needs to be imported\nfrom pyspark.sql.types import StructType,IntegerType,DoubleType,StructField,StringType,DecimalType\n\ndf_schema=StructType(\n    [StructField('ACC_NUM',IntegerType(), True),\n     StructField('ACTIVE_FLG',StringType(), True),\n     StructField('ADD_DISC_AMT',DecimalType(15,5), True),\n     StructField('ADD_DISC_PCT',DecimalType(15,5), True),\n     StructField('ADD_DISC_TYPE',StringType(), True),\n     StructField('BRAND_CODE',StringType(), True),\n     StructField('CARD_NUM',StringType(), True),\n     StructField('CUST_ID',DoubleType(), True),\n     StructField('INV_DATE',StringType(), True),\n     StructField('INV_NUM',StringType(), True),\n     StructField('INV_TIME',StringType(), True),\n     StructField('INV_TYPE',StringType(), True),\n     StructField('ITEM_BASIC_PT_PROCESS_IND',IntegerType(), True),\n     StructField('ITEM_BASIC_PTS',DecimalType(15,5), True),\n     StructField('ITEM_CODE',StringType(), True),\n     StructField('ITEM_CONC_CODE',StringType(), True),\n     StructField('ITEM_CP',DecimalType(15,5), True),\n     StructField('ITEM_DEPT_CODE',StringType(), True),\n     StructField('ITEM_DESC',StringType(), True),\n     StructField('ITEM_DISC_AMT',DecimalType(15,5), True),\n     StructField('ITEM_DISC_IND',IntegerType(), True),\n     StructField('ITEM_DISC_PCT',DecimalType(15,5), True),\n     StructField('ITEM_GROSS_AMT',DecimalType(15,5), True),\n     StructField('ITEM_MRK_DOWN_AMT',DecimalType(15,5), True),\n     StructField('ITEM_MRK_UP_AMT',DecimalType(10,3), True),\n     StructField('ITEM_MRP',DecimalType(10,3), True),\n     StructField('ITEM_NET_AMT',DecimalType(10,3), True),\n     StructField('ITEM_QTY',DecimalType(10,3), True),\n     StructField('ITEM_TAX_AMT',DecimalType(10,3), True),\n     StructField('ITEM_TRAN_TYPE',StringType(), True),\n     StructField('MKDN_CODE',IntegerType(), True),\n     StructField('MKDN_RESN',StringType(), True),\n     StructField('OFFSALE_MRP',DecimalType(10,3), True),\n     StructField('OU_CODE',StringType(), True),\n     StructField('PLU_EAN',StringType(), True),\n     StructField('POS_DETL_ID',DoubleType(), True),\n     StructField('POS_HEADER_ID',StringType(), True),\n     StructField('POS_USER_ID',StringType(), True),\n     StructField('PROMOTION',StringType(), True),\n     StructField('REVRSE',StringType(), True),\n     StructField('SCH_CODE',StringType(), True),\n     StructField('SCH_TYPE',StringType(), True),\n     StructField('STORE_CODE',StringType(), True),\n     StructField('TILL_NUMBER',StringType(), True),\n     StructField('ENROLL_DATE',StringType(), True),\n     StructField('DIVISION',StringType(), True),\n     StructField('GROUP_KEY',IntegerType(), True),\n     StructField('GROUPNAME',StringType(), True),\n     StructField('DEPARTMENT',StringType(), True),\n     StructField('CLASS',StringType(), True),\n     StructField('SUBCLASS',StringType(), True),\n     StructField('BRAND_KEY',IntegerType(), True),\n     StructField('BRAND_NAME',StringType(), True),\n     StructField('CATEGORY',StringType(), True),\n     StructField('STORE_NAME',StringType(), True),\n     StructField('REGION',StringType(), True),\n     StructField('LOCN_NAME',StringType(), True),\n     StructField('WeekOfMnth',StringType(), True),\n     StructField('DAY',DoubleType(), True),\n     StructField('WKEND_FLG',StringType(), True)])\n\ndf=spark.read.csv('file:///sasshared/hybris_data/TN_ITM_REV_HC.csv', header=True, schema=df_schema)\ndf.show(5)\ndf.printSchema()\ndel df","user":"vinay.hugar","dateUpdated":"2021-02-03T01:41:48+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610480635718_-848716284","id":"20210113-011355_974063808","dateCreated":"2021-01-13T01:13:55+0530","dateStarted":"2021-02-03T01:38:45+0530","dateFinished":"2021-02-03T01:38:45+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44871"},{"text":"%spark2.pyspark\n# efficient way of reading the file\ndf= spark.read.format(\"csv\") \\\n  .option(\"inferSchema\", \"false\") \\\n  .option(\"header\", \"true\") \\\n  .option(\"sep\", \",\") \\\n  .load('file:///sasshared/hybris_data/TN_ITM_REV_HC.csv')\ndf.show(5)\ndf.printSchema()\n\ndel df","user":"vinay.hugar","dateUpdated":"2021-02-03T02:22:01+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610481738396_872974395","id":"20210113-013218_130721804","dateCreated":"2021-01-13T01:32:18+0530","dateStarted":"2021-02-03T01:39:04+0530","dateFinished":"2021-02-03T01:39:05+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44872"},{"text":"%spark2.pyspark\n# defining user UDF to read diff file formats\ndef get_data(file_location,file_type,infer_schema):\n  #first_row_is_header = \"true\"\n  delimiter = \",\"\n  df = spark.read.format(file_type) \\\n  .option(\"inferSchema\", infer_schema) \\\n  .option(\"header\", 'true') \\\n  .option(\"sep\", delimiter) \\\n  .load(file_location)\n  return df\n","user":"vinay.hugar","dateUpdated":"2021-02-03T03:05:08+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610482538184_1957726502","id":"20210113-014538_740021641","dateCreated":"2021-01-13T01:45:38+0530","dateStarted":"2021-02-03T03:05:08+0530","dateFinished":"2021-02-03T03:05:08+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44873"},{"text":"%spark2.pyspark\ndf=get_data('file:///sasshared/hybris_data/TN_ITM_REV_HC.csv','csv','true')\ndf.show(5)\ndf.printSchema()\ndel df","user":"vinay.hugar","dateUpdated":"2021-02-03T01:42:33+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610483583315_885198963","id":"20210113-020303_1581828841","dateCreated":"2021-01-13T02:03:03+0530","dateStarted":"2021-02-03T01:42:34+0530","dateFinished":"2021-02-03T01:42:37+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44874"},{"text":"%spark2.pyspark\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\ndf.printSchema()\ndel df","user":"vinay.hugar","dateUpdated":"2021-02-03T01:42:46+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610483601929_1493104841","id":"20210113-020321_1606204009","dateCreated":"2021-01-13T02:03:21+0530","dateStarted":"2021-02-03T01:42:46+0530","dateFinished":"2021-02-03T01:42:47+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44875"},{"text":"%spark2.pyspark\n\n# connecting to the mysql server and loading the data into spark dataframe\n\ndf = spark.read.format('jdbc')\\\n    .option(\"url\", \"jdbc:mysql://localhost/cvmprod\")\\\n    .option(\"driver\", \"com.mysql.jdbc.Driver\")\\\n    .option(\"dbtable\",\"demo\" )\\\n    .option(\"user\", \"abc\")\\\n    .option(\"password\", \"abc@123\").load()\ndf.show()\ndel df\n\n\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:34:11+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610483788793_-913010949","id":"20210113-020628_65142086","dateCreated":"2021-01-13T02:06:28+0530","dateStarted":"2021-02-03T02:33:09+0530","dateFinished":"2021-02-03T02:33:11+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44876"},{"text":"%spark2.pyspark\n\ndf = spark.read.format('jdbc')\\\n    .option(\"url\", \"jdbc:mysql://localhost/cvmprod\")\\\n    .option(\"driver\", \"com.mysql.jdbc.Driver\")\\\n    .option(\"dbtable\",\"(select * from demo limit 10) as D\" )\\\n    .option(\"user\", \"abc\")\\\n    .option(\"password\", \"abc@123\").load()\ndf.show()\ndel df\n\n\n","user":"vinay.hugar","dateUpdated":"2021-01-26T23:23:49+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610485818485_-1200271666","id":"20210113-024018_815439914","dateCreated":"2021-01-13T02:40:18+0530","dateStarted":"2021-01-26T23:23:05+0530","dateFinished":"2021-01-26T23:23:06+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44877"},{"text":"%spark2.pyspark\n# \ndf = spark.read.format('jdbc')\\\n    .option(\"url\", \"jdbc:mysql://localhost/cvm_india\")\\\n    .option(\"driver\", \"com.mysql.jdbc.Driver\")\\\n    .option(\"dbtable\",\"(select a.*,@curRow := @curRow + 1 AS row_number from TK_TN_ITM_REV_HC as a JOIN (SELECT @curRow := 0 ) r limit 10) as D\")\\\n    .option(\"user\", \"abc\")\\\n    .option(\"password\", \"abc@123\")\\\n    .option(\"fetchSize\", 1000)\\\n    .option(\"partitionColumn\",\"GROUP_KEY\")\\\n    .option(\"lowerBound\",4)\\\n    .option(\"upperBound\",325)\\\n    .option(\"numPartitions\",450).load()\ndf.show()\ndel df","user":"vinay.hugar","dateUpdated":"2021-01-26T23:24:31+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610485864808_2019291823","id":"20210113-024104_2014826166","dateCreated":"2021-01-13T02:41:04+0530","dateStarted":"2021-01-15T01:06:13+0530","dateFinished":"2021-01-15T01:06:40+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44878"},{"text":"%spark2.pyspark\n# accessing hive data using spark.sql\nspark.sql('show databases').show()\nspark.sql('use  cvm_india')\nspark.sql('show tables').show()\ndf=spark.sql('select * from cvmprod.tn_itm_rev_mx limit 10')\ndf.show(5)\n#del df\n\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:36:51+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610486046989_-633464761","id":"20210113-024406_391609052","dateCreated":"2021-01-13T02:44:06+0530","dateStarted":"2021-01-27T03:28:26+0530","dateFinished":"2021-01-27T03:30:55+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44879"},{"text":"%spark2.pyspark\n# exporting data and storing back to hive\ndf.write.parquet(\"df_temp.parquet\")\ndf.write.orc(\"df_temp.orc\")\n#df.write.csv('df_temp.csv')\ndf.write.mode(\"overwrite\").format(\"orc\").saveAsTable(\"cvmprod.df_temp\")\ndel df","user":"vinay.hugar","dateUpdated":"2021-01-27T03:42:22+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611698088803_-1918915795","id":"20210127-032448_736824617","dateCreated":"2021-01-27T03:24:48+0530","dateStarted":"2021-01-27T03:31:16+0530","dateFinished":"2021-01-27T03:38:39+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44880"},{"text":"%spark2.pyspark\n# Renaming the columns\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\nprint(df.columns)\ndf=df.withColumnRenamed(\"INV_DATE\",\"Transaction_date\")\nprint(\"\\n\\n\")\nprint(df.columns)","user":"vinay.hugar","dateUpdated":"2021-02-03T02:37:38+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610653845870_1130468838","id":"20210115-012045_839031026","dateCreated":"2021-01-15T01:20:45+0530","dateStarted":"2021-02-03T01:44:29+0530","dateFinished":"2021-02-03T01:44:29+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44881"},{"text":"%spark2.pyspark\n# Renaming the columns\nprint(df.columns)\ndf=(df.withColumnRenamed('ACC_NUM','ACCOUNT_NUMBER')\n      .withColumnRenamed('ACTIVE_FLG', 'ACTIVE_FLAGE')\n      .withColumnRenamed('ADD_DISC_AMT', 'DISCOUNT_AMOUNT'))\nprint('\\n\\n')\nprint(df.columns)\ndel df","user":"vinay.hugar","dateUpdated":"2021-02-03T02:37:45+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610737010738_1143128721","id":"20210116-002650_1265931570","dateCreated":"2021-01-16T00:26:50+0530","dateStarted":"2021-02-03T01:44:32+0530","dateFinished":"2021-02-03T01:44:32+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44882"},{"text":"%spark2.pyspark\n#changing the data types\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\nprint(df.printSchema())\ndf=df.withColumn(\"ITEM_DISC_AMT\",col(\"ITEM_DISC_AMT\").cast('double'))\nprint(df.printSchema())\ndel df","user":"vinay.hugar","dateUpdated":"2021-02-03T02:38:03+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610737172829_300615541","id":"20210116-002932_65452626","dateCreated":"2021-01-16T00:29:32+0530","dateStarted":"2021-02-03T01:45:27+0530","dateFinished":"2021-02-03T01:45:27+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44883"},{"text":"%spark2.pyspark\n#changing the data types\nfrom pyspark.sql.functions import col\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\ndf=(df.withColumn(\"ITEM_GROSS_AMT\",col(\"ITEM_GROSS_AMT\").cast('double'))\n      .withColumn(\"ITEM_MRK_DOWN_AMT\",col(\"ITEM_MRK_DOWN_AMT\").cast('double'))\n      .withColumn(\"ITEM_MRK_UP_AMT\",col(\"ITEM_MRK_UP_AMT\").cast('double'))\n      .withColumn(\"ITEM_QTY\",col(\"ITEM_QTY\").cast('int')))\nprint(df.printSchema())\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:38:21+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610737277810_-1334137221","id":"20210116-003117_96286759","dateCreated":"2021-01-16T00:31:17+0530","dateStarted":"2021-02-03T01:45:36+0530","dateFinished":"2021-02-03T01:45:36+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44884"},{"text":"%spark2.pyspark\n# creating new columns\ndf=df.withColumn(\"ppu\",(df.ITEM_NET_AMT/df.ITEM_QTY))\ndf.show(1)\ndel df\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:38:45+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610738010137_475435811","id":"20210116-004330_1789759330","dateCreated":"2021-01-16T00:43:30+0530","dateStarted":"2021-02-03T01:45:43+0530","dateFinished":"2021-02-03T01:45:45+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44885"},{"text":"%spark2.pyspark\n# no of rows in dataframe\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\ndf.count()","user":"vinay.hugar","dateUpdated":"2021-02-03T02:38:56+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610738169104_-1354244941","id":"20210116-004609_859851859","dateCreated":"2021-01-16T00:46:09+0530","dateStarted":"2021-02-03T01:45:52+0530","dateFinished":"2021-02-03T01:45:58+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44886"},{"text":"%spark2.pyspark\n# droping null\ndf=df.dropna(subset=['MKDN_RESN'])\nprint(df.count())","user":"vinay.hugar","dateUpdated":"2021-02-03T02:39:12+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610738563347_1694734893","id":"20210116-005243_1145132919","dateCreated":"2021-01-16T00:52:43+0530","dateStarted":"2021-02-03T01:46:04+0530","dateFinished":"2021-02-03T01:46:09+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44887"},{"text":"%spark2.pyspark\n# droping null\ndf=df.dropna(how=\"any\",subset=['POS_HEADER_ID','POS_USER_ID'])\nprint(df.count())\ndel df","user":"vinay.hugar","dateUpdated":"2021-02-03T02:39:17+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610738691310_689317415","id":"20210116-005451_746122727","dateCreated":"2021-01-16T00:54:51+0530","dateStarted":"2021-02-03T01:46:25+0530","dateFinished":"2021-02-03T01:46:31+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44888"},{"text":"%spark2.pyspark\n#droping columns\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\ndf=df.drop('ACC_NUM','ADD_DISC_PCT','BRAND_CODE')\ndf.show(1)\ndel df\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:39:27+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610738978605_-477307841","id":"20210116-005938_1664161863","dateCreated":"2021-01-16T00:59:38+0530","dateStarted":"2021-02-03T01:46:47+0530","dateFinished":"2021-02-03T01:46:47+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44889"},{"text":"%spark2.pyspark\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\nprint(df.where(df[\"MKDN_RESN\"].isNull()).count())\ndel df","user":"vinay.hugar","dateUpdated":"2021-02-03T01:46:55+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610739881042_1822731870","id":"20210116-011441_866191808","dateCreated":"2021-01-16T01:14:41+0530","dateStarted":"2021-02-03T01:46:55+0530","dateFinished":"2021-02-03T01:46:59+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44890"},{"text":"%spark2.pyspark\n# replacing null values\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\ndf=df.fillna('UNK',subset='MKDN_RESN')\nprint(df.where(df[\"MKDN_RESN\"].isNull()).count())\ndel df\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:40:22+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610741113618_2048812928","id":"20210116-013513_2092900902","dateCreated":"2021-01-16T01:35:13+0530","dateStarted":"2021-02-03T01:47:04+0530","dateFinished":"2021-02-03T01:47:04+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44891"},{"text":"%spark2.pyspark\n\n#filter\ndf=get_data('/user/vinay.hugar/TN_ITM_REV_MX3.parquet','parquet','false')\ndf=df.filter(df.ITEM_DESC==\"LADIES KURTA\")\ndf.show(5)\ndel df\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:40:32+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610743268350_965070035","id":"20210116-021108_1930635106","dateCreated":"2021-01-16T02:11:08+0530","dateStarted":"2021-02-03T01:47:17+0530","dateFinished":"2021-02-03T01:47:19+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44892"},{"text":"%spark2.pyspark\n#filter\ndf=get_data('/user/vinay.hugar/TN_ITM_REV_MX3.parquet','parquet','false')\ndf=df.filter(\"ITEM_DESC=='LADIES KURTA'\")\ndf.show(5)\ndel df\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:40:39+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610743700121_-1456268707","id":"20210116-021820_1408394127","dateCreated":"2021-01-16T02:18:20+0530","dateStarted":"2021-02-03T01:47:26+0530","dateFinished":"2021-02-03T01:47:27+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44893"},{"text":"%spark2.pyspark\n#filter\ndf=get_data('/user/vinay.hugar/TN_ITM_REV_MX3.parquet','parquet','false')\ndf=df.filter(\"GROUPNAME='BASIC' and SUBCLASS like '%KURTA'\")\ndf.show(20)\ndel df","user":"vinay.hugar","dateUpdated":"2021-02-03T02:40:45+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610743790843_313701781","id":"20210116-021950_729183456","dateCreated":"2021-01-16T02:19:50+0530","dateStarted":"2021-02-03T01:47:36+0530","dateFinished":"2021-02-03T01:47:37+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44894"},{"text":"%spark2.pyspark\n#filter\ndf=get_data('/user/vinay.hugar/TN_ITM_REV_MX3.parquet','parquet','false')\ndf=df.filter(\"GROUPNAME='BASIC' and SUBCLASS like 'FASHION%'\")\ndf.show(20)\ndel df","user":"vinay.hugar","dateUpdated":"2021-02-03T02:40:52+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","editorHide":false},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610744038584_910351898","id":"20210116-022358_374774176","dateCreated":"2021-01-16T02:23:58+0530","dateStarted":"2021-02-03T01:47:44+0530","dateFinished":"2021-02-03T01:47:45+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44895"},{"text":"%spark2.pyspark\n#filter\ndf=get_data('/user/vinay.hugar/TN_ITM_REV_MX3.parquet','parquet','false')\ndf=df.filter(col(\"SUBCLASS\").startswith(\"FASHION\"))\ndf.show(20)\ndel df\n\n\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:41:05+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","editorHide":false},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610743974552_-2043596213","id":"20210116-022254_541507925","dateCreated":"2021-01-16T02:22:54+0530","dateStarted":"2021-02-03T01:47:52+0530","dateFinished":"2021-02-03T01:47:53+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44896"},{"text":"%spark2.pyspark\n#changing string to date\nfrom pyspark.sql.functions import to_date,col,to_timestamp,unix_timestamp\ndf=get_data('/user/vinay.hugar/TN_ITM_REV_MX3.parquet','parquet','false')\nc1=df.select('OU_CODE','CARD_NUM','INV_DATE','INV_NUM','ITEM_CODE','ITEM_QTY','ITEM_NET_AMT','ENROLL_DATE')\nc1.printSchema()\nc1.show(5)\nc1=(c1.withColumn('INV_DATE', to_date(unix_timestamp(col('INV_DATE'), 'ddMMMyyyy').cast(\"timestamp\")))\n.withColumn('ENROLL_DATE', to_date(unix_timestamp(col('ENROLL_DATE'), 'ddMMMyyyy').cast(\"timestamp\"))))\nc1.printSchema()\nc1.show(5)\ndel df,c1\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:41:24+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","editorHide":false},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610743969820_365693325","id":"20210116-022249_824779856","dateCreated":"2021-01-16T02:22:49+0530","dateStarted":"2021-02-03T01:47:59+0530","dateFinished":"2021-02-03T01:48:01+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44897"},{"text":"%spark2.pyspark\nfrom pyspark.sql.functions import min,max\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\nminn=df.agg({'ITEM_TAX_AMT':'min'}).collect()[0][0]\nmaxx=df.agg({'ITEM_TAX_AMT':'max'}).collect()[0][0]\nprint(minn)\nprint(maxx)\ndel df,minn,maxx","user":"vinay.hugar","dateUpdated":"2021-02-03T03:14:16+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sasprdos.lmggi.com:4052/jobs/job?id=15","http://sasprdos.lmggi.com:4052/jobs/job?id=16"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1612301624573_-1178413178","id":"20210203-030344_1648623525","dateCreated":"2021-02-03T03:03:44+0530","dateStarted":"2021-02-03T03:14:16+0530","dateFinished":"2021-02-03T03:14:25+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44898"},{"text":"%spark2.pyspark\n#group by\nfrom pyspark.sql.functions import min,max,first,last\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\n#df=df.orderBy(\"INV_DATE\", ascending=False)\ng1=df.groupBy('CARD_NUM').agg(min(\"INV_DATE\").alias(\"Min_Date\"),\n                                max(\"INV_DATE\").alias(\"Max_Date\"))\ng1.show()                                \ndel df,g1\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:41:36+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1611475856829_1682501486","id":"20210124-134056_357808293","dateCreated":"2021-01-24T13:40:56+0530","dateStarted":"2021-02-03T01:48:25+0530","dateFinished":"2021-02-03T01:48:45+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44899"},{"text":"%spark2.pyspark\n# group by & creating new columns with date\nfrom pyspark.sql.functions import min,max,to_date,current_date,year,weekofyear,month,months_between,date_sub,date_add,last_day,trunc,datediff,round\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\ng2=df.groupBy('CARD_NUM').agg(min(\"INV_DATE\").alias(\"Min_Date\"),\n                                max(\"INV_DATE\").alias(\"Max_Date\"))\n# adding current date\ng2=g2.withColumn(\"Today\",current_date())\ng2=g2.withColumn(\"Date_7\",date_sub(g2.Min_Date,7))\ng2=g2.withColumn(\"Date_7+\",date_add(g2.Min_Date,7))\n## adding new column last day of the month\ng2=g2.withColumn(\"last_day\",last_day(g2.Today))\ng2=g2.withColumn(\"first_day\",trunc(g2.Today,\"month\"))\n# adding new column  last day of last month\ng2=g2.withColumn(\"last_month_lastDay\",date_sub(trunc(current_date(),\"month\"),1))\n# adding new column month diff between two months\ng2=g2.withColumn(\"Month_diff\",round(months_between(g2.Max_Date,g2.Min_Date)))\ng2.show(50)\ndel df,g2","user":"vinay.hugar","dateUpdated":"2021-02-03T02:42:15+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1611475856304_148054443","id":"20210124-134056_1437249096","dateCreated":"2021-01-24T13:40:56+0530","dateStarted":"2021-02-03T01:48:56+0530","dateFinished":"2021-02-03T01:49:15+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44900"},{"text":"%spark2.pyspark\ncreating new columns with date\nfrom pyspark.sql.functions import next_day,quarter,add_months,datediff,dayofyear,month,year\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\ng2=df.groupBy('CARD_NUM').agg(min(\"INV_DATE\").alias(\"Min_Date\"),\n                                max(\"INV_DATE\").alias(\"Max_Date\"))\n\n# getting the quater, in pyspark date quater works on calyinder dates\ng2=g2.withColumn(\"Today\",current_date())\ng2=g2.withColumn(\"quater\",quarter(g2.Max_Date))\n## adding  months\ng2=g2.withColumn(\"added_months\",add_months(g2.Max_Date,6))\n# getting the week of the year\ng2=g2.withColumn(\"Week_NO\",weekofyear(g2.Max_Date))\n# getting the next day\n#For example, next_day('2015-07-27', \"Sunday\") returns 2015-08-02 because that is the first Sunday after 2015-07-27.\n#Day of the week parameter is case insensitive, and accepts first three or two characters: \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\".\ng2=g2.withColumn('Today',current_date())\ng2=g2.withColumn(\"nxt_date\",next_day(g2.Today,\"fr\"))\ng2=g2.withColumn(\"dayOfYear\",dayofyear(g2.Min_Date))\ng2=g2.withColumn(\"month\",month(g2.Today))\ng2=g2.withColumn(\"year\",year(g2.Today))\ng2.show(50)","user":"vinay.hugar","dateUpdated":"2021-02-03T02:42:27+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610743958202_640281284","id":"20210116-022238_305273232","dateCreated":"2021-01-16T02:22:38+0530","dateStarted":"2021-02-03T01:49:34+0530","dateFinished":"2021-02-03T01:49:53+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44901"},{"text":"%spark2.pyspark\n#group by\n\nfrom pyspark.sql.functions import countDistinct,sum,round,min,max,datediff,col,count\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','true')\n\n#df.printSchema()\n#c1=df.select('OU_CODE','CARD_NUM','INV_DATE','INV_TIME','INV_NUM','ITEM_CODE','ITEM_QTY','ITEM_NET_AMT','ENROLL_DATE')\ng2=df.groupBy('CARD_NUM').agg(countDistinct(\"INV_NUM\").alias(\"Total_InvoiceNo\"),\n                               countDistinct(\"ITEM_CODE\").alias(\"Unique_Products\"),\n                               sum(\"ITEM_QTY\").alias(\"Quantity_sold\"),\n                               round(sum('ITEM_NET_AMT')).alias(\"Total_net_revenue\"),\n                               countDistinct(\"INV_DATE\").alias(\"Unique_InvoiceDate\"))\n            \n\n\ng2.show()\ndel df,g2","user":"vinay.hugar","dateUpdated":"2021-02-03T02:42:40+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610822835157_1315602588","id":"20210117-001715_1739593939","dateCreated":"2021-01-17T00:17:15+0530","dateStarted":"2021-02-03T01:51:46+0530","dateFinished":"2021-02-03T01:54:36+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44902"},{"text":"%spark2.pyspark\n#group by\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\ng2=df.groupBy('CARD_NUM').agg(countDistinct(\"INV_NUM\").alias(\"Total_InvoiceNo\"),\n                               sum(\"ITEM_QTY\").alias(\"Quantity\"),\n                               round(sum('ITEM_NET_AMT')).alias(\"Total_net_revenue\"),\n                               min(\"INV_DATE\").alias(\"Min_Date\"),\n                               max(\"INV_DATE\").alias(\"Max_Date\"))\n                               \ng2=(g2.withColumn(\"ATV\",round(g2.Total_net_revenue/g2.Total_InvoiceNo,2)).withColumn(\"UPT\",round(g2.Quantity/g2.Total_InvoiceNo)))\ng2.show()\ndel df,g2","user":"vinay.hugar","dateUpdated":"2021-02-03T02:42:42+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1610826074991_-583806090","id":"20210117-011114_1829168567","dateCreated":"2021-01-17T01:11:14+0530","dateStarted":"2021-02-03T01:55:43+0530","dateFinished":"2021-02-03T01:56:45+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44903"},{"text":"%spark2.pyspark\n#Window (also, windowing or windowed) functions perform a calculation over a set of rows. \n#It is an important tool to do statistics. Most Databases support Window functions. \n#Spark from version 1.4 start supporting Window functions.\n#Spark Window Functions have the following traits:\n#  => perform a calculation over a group of rows, called the Frame.\n#  => a frame corresponding to the current row\n#  => return a new value to for each row by an aggregate/window function\n\nfrom pyspark.sql.functions import lag,col,lead\nfrom pyspark.sql import Window\n\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\ng1=df.select('CARD_NUM','INV_DATE').distinct()\nws=Window().partitionBy('CARD_NUM').orderBy(col('INV_DATE'))\ng1=g1.withColumn(\"lag_date\",lag('INV_DATE',count=1).over(ws))\ng1=g1.withColumn(\"lead_date\",lead('INV_DATE',count=1).over(ws))\ng1.show(50)\ndel df,g1","user":"vinay.hugar","dateUpdated":"2021-02-03T02:47:45+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1610826349985_-1875672705","id":"20210117-011549_1853294781","dateCreated":"2021-01-17T01:15:49+0530","dateStarted":"2021-02-03T02:47:45+0530","dateFinished":"2021-02-03T02:47:45+0530","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44904"},{"text":"%spark2.pyspark \n# using when and otherwise just like ifelse ot np.where\nfrom pyspark.sql.functions import when,rand\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\nwest=df[\"REGION\"].like('%WEST%')\nsouth=df[\"REGION\"].like('%SOUTH%')\nnorth=df[\"REGION\"].like('%NORTH%')\neast=df[\"REGION\"].like('%EAST%')\ndf=df.withColumn(\"REGION_CODE\",(when(west,1)\n                                   .when(south,2)\n                                   .when(north,3)\n                                   .when(east,4)\n                                   .otherwise(\"none\")))\n                                   \ndf.show()\ndel df\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:49:01+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1611692540096_1909062980","id":"20210127-015220_809125900","dateCreated":"2021-01-27T01:52:20+0530","dateStarted":"2021-02-03T02:00:10+0530","dateFinished":"2021-02-03T02:00:10+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44905"},{"text":"%spark2.pyspark\n# using when and otherwise just like ifelse ot np.where\nfrom pyspark.sql.functions import when,rand\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\n\ndf=df.withColumn(\"REGION_CODE\",(when(df.REGION=='WEST','WEST_INDIA')\n                                   .when(df.REGION=='SOUTH','SOUTH_INDIA')\n                                   .when(df.REGION=='NORTH','NORTH_INDIA')\n                                   .when(df.REGION=='EAST','EAST_INDIA')\n                                   .otherwise(\"none\")))\n                                   \ndf.show()\ndel df\n\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:49:19+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611692881743_-1479299833","id":"20210127-015801_184580003","dateCreated":"2021-01-27T01:58:01+0530","dateStarted":"2021-01-27T02:04:59+0530","dateFinished":"2021-01-27T02:04:59+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44906"},{"text":"%spark2.pyspark\n# Binarizer\nfrom pyspark.ml.feature import Binarizer\n\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\ng2=df.groupBy('CARD_NUM').agg(countDistinct(\"INV_NUM\").alias(\"Total_InvoiceNo\"),\n                               sum(\"ITEM_QTY\").alias(\"Quantity\"),\n                               round(sum('ITEM_NET_AMT')).alias(\"Total_net_revenue\"),\n                               min(\"INV_DATE\").alias(\"Min_Date\"),\n                               max(\"INV_DATE\").alias(\"Max_Date\"))\n                               \ng2=(g2.withColumn(\"ATV\",round(g2.Total_net_revenue/g2.Total_InvoiceNo,2)).withColumn(\"UPT\",round(g2.Quantity/g2.Total_InvoiceNo)))\nbin1=Binarizer(threshold=1000,inputCol=\"ATV\",outputCol=\"ATV_Binarizer1\")\nbin2=Binarizer(threshold=2000,inputCol=\"ATV\",outputCol=\"ATV_Binarizer2\")\n\n# Apply the transformer\ng2=bin1.transform(g2)\ng2=bin2.transform(g2)\ng2.show()\ndel df,g2\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:51:40+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1611693249795_-1136171512","id":"20210127-020409_1840371270","dateCreated":"2021-01-27T02:04:09+0530","dateStarted":"2021-02-03T02:02:47+0530","dateFinished":"2021-02-03T02:03:49+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44907"},{"text":"%spark2.pyspark\n# Bucketizer\nfrom pyspark.ml.feature import Bucketizer\n\n\n# define the splits\nsplits=[-float('inf'),500,1000,2000,float('inf')]\nbuck=Bucketizer(splits=splits,inputCol=\"ATV\",outputCol=\"ATV_Buck\")\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\ng2=df.groupBy('CARD_NUM').agg(countDistinct(\"INV_NUM\").alias(\"Total_InvoiceNo\"),\n                               sum(\"ITEM_QTY\").alias(\"Quantity\"),\n                               round(sum('ITEM_NET_AMT')).alias(\"Total_net_revenue\"),\n                               min(\"INV_DATE\").alias(\"Min_Date\"),\n                               max(\"INV_DATE\").alias(\"Max_Date\"))\n                               \ng2=(g2.withColumn(\"ATV\",round(g2.Total_net_revenue/g2.Total_InvoiceNo,2)).withColumn(\"UPT\",round(g2.Quantity/g2.Total_InvoiceNo)))\ng2=buck.transform(g2)\ng2.show()\ndel df,g2\n\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:52:19+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611694155580_-1130153792","id":"20210127-021915_200361882","dateCreated":"2021-01-27T02:19:15+0530","dateStarted":"2021-01-27T02:29:04+0530","dateFinished":"2021-01-27T02:29:56+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44908"},{"text":"%spark2.pyspark\n# one hot encoding\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\ndf=df.select('CARD_NUM','REGION').distinct()\nregion = df.select('REGION').distinct().rdd.flatMap(lambda x:x).collect()\nexprs = [when(col('REGION') == reg,1).otherwise(0)\\\n            .alias(str(reg)) for reg in region]\ng1 = df.select(df.columns+exprs)\ng1.show()\ndel df,g1","user":"vinay.hugar","dateUpdated":"2021-02-03T02:50:24+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1611694643389_-656770518","id":"20210127-022723_9000789","dateCreated":"2021-01-27T02:27:23+0530","dateStarted":"2021-02-03T02:07:28+0530","dateFinished":"2021-02-03T02:08:24+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44909"},{"text":"%md\njoins\nTypes of join :\n=>Inner Join\n=>Outer Join\n=>Left Join\n=>Right Join\n=>Left Semi Join\n=>Left Anti Join\n","user":"vinay.hugar","dateUpdated":"2021-01-27T03:02:18+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611695057567_-553061167","id":"20210127-023417_1187468286","dateCreated":"2021-01-27T02:34:17+0530","dateStarted":"2021-01-27T03:02:18+0530","dateFinished":"2021-01-27T03:02:18+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44910"},{"text":"%spark2.pyspark\n# creating new dataframes to perform join operations\ndataset1 = [\n  {\n  'key' : 'abc',\n  'val11' : 1.1,\n  'val12' : 1.2\n  },\n  {\n  'key' : 'def',\n  'val11' : 3.0,\n  'val12' : 3.4\n  }\n]\n\ndataset2 = [\n  {\n  'key' : 'abc',\n  'val21' : 2.1,\n  'val22' : 2.2\n  },\n  {\n  'key' : 'xyz',\n  'val21' : 3.1,\n  'val22' : 3.2\n  }\n]\ndataset1=spark.createDataFrame(dataset1,['key','val11','val12'])\ndataset2=spark.createDataFrame(dataset2,['key','val21','val22'])\ndataset1.show()\ndataset2.show()\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:08:57+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1611695776645_1697672689","id":"20210127-024616_875600247","dateCreated":"2021-01-27T02:46:16+0530","dateStarted":"2021-02-03T02:08:57+0530","dateFinished":"2021-02-03T02:08:59+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44911"},{"text":"%spark2.pyspark\n#inner join\ndf = dataset1.join(dataset2, on=['key'], how='inner')\ndf.show()\ndel df","user":"vinay.hugar","dateUpdated":"2021-02-03T02:10:49+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1611696768428_-1453461200","id":"20210127-030248_1115589732","dateCreated":"2021-01-27T03:02:48+0530","dateStarted":"2021-02-03T02:10:49+0530","dateFinished":"2021-02-03T02:10:57+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44912"},{"text":"%spark2.pyspark\n#Outer Join\n#Outer join combines data from both dataframes, irrespective of 'on' column matches or not. \n#If there is a match combined, one row is created if there is no match missing columns for that row are filled with null.  \ndf = dataset1.join(dataset2, on=['key'], how='outer')\ndf.show()\ndel df\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:11:00+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1611696806546_1152404966","id":"20210127-030326_356751576","dateCreated":"2021-01-27T03:03:26+0530","dateStarted":"2021-02-03T02:11:00+0530","dateFinished":"2021-02-03T02:11:08+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44913"},{"text":"%spark2.pyspark\n# Left join\ndf = dataset1.join(dataset2, on=['key'], how='left')\ndf.show()\ndel df\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:11:48+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1611696868198_-1087405551","id":"20210127-030428_1195151203","dateCreated":"2021-01-27T03:04:28+0530","dateStarted":"2021-02-03T02:11:48+0530","dateFinished":"2021-02-03T02:11:56+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44914"},{"text":"%spark2.pyspark\n\n#Left Semi Join\n#This is like inner join, with only the left dataframe columns and values are selected.\ndf  = dataset1.join(dataset2, on=['key'], how='left_semi')\ndf.show()\ndel df\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:12:05+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1611696922151_-1274178955","id":"20210127-030522_98531045","dateCreated":"2021-01-27T03:05:22+0530","dateStarted":"2021-02-03T02:12:05+0530","dateFinished":"2021-02-03T02:12:13+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44915"},{"text":"%spark2.pyspark\n#Left Anti Join\n#This join is like dataset1-dataset2, as it selects all rows from dataset1 that are not present in dataset2.  \ndf  = dataset1.join(dataset2, on=['key'], how='left_anti')\ndf.show()\ndel df\n","user":"vinay.hugar","dateUpdated":"2021-02-03T02:12:30+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1611696990688_-158098126","id":"20210127-030630_126268368","dateCreated":"2021-01-27T03:06:30+0530","dateStarted":"2021-02-03T02:12:30+0530","dateFinished":"2021-02-03T02:12:37+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44916"},{"text":"%spark2.pyspark\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\ndf.createOrReplaceTempView('df_temp')\nspark.sql(\"select * from df_temp limit 10\").show()\n","user":"vinay.hugar","dateUpdated":"2021-01-27T03:16:04+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611697054551_904365316","id":"20210127-030734_1001572919","dateCreated":"2021-01-27T03:07:34+0530","dateStarted":"2021-01-27T03:16:04+0530","dateFinished":"2021-01-27T03:16:30+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44917"},{"text":"%spark2.pyspark\nspark.sql(\"select count(distinct inv_num) as transactions from df_temp limit 10\").show()\nspark.sql(\"select count(*) as rows from df_temp limit 10\").show()\nprint(df.count())\ndel df","user":"vinay.hugar","dateUpdated":"2021-01-27T03:20:43+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611697564180_1216402834","id":"20210127-031604_1908773665","dateCreated":"2021-01-27T03:16:04+0530","dateStarted":"2021-01-27T03:19:59+0530","dateFinished":"2021-01-27T03:20:24+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44918"},{"text":"%spark2.pyspark\nspark.stop()","user":"vinay.hugar","dateUpdated":"2021-02-03T02:52:38+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611697670352_663121949","id":"20210127-031750_1113421096","dateCreated":"2021-01-27T03:17:50+0530","dateStarted":"2021-02-03T02:52:38+0530","dateFinished":"2021-02-03T02:52:38+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44919"},{"text":"%spark2.pyspark\n","user":"vinay.hugar","dateUpdated":"2021-01-27T11:16:38+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611726398828_1700361573","id":"20210127-111638_552033377","dateCreated":"2021-01-27T11:16:38+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:44920"}],"name":"Pyspark","id":"2FWD15GJ2","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark2:vinay.hugar:2FWD15GJ2":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}