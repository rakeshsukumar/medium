{"paragraphs":[{"text":"%md\n##  SPARK SQL USING ZEPPELIN\n","user":"vinay.hugar","dateUpdated":"2021-02-03T01:29:30+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>SPARK SQL USING ZEPPELIN</h2>\n"}]},"apps":[],"jobName":"paragraph_1612292597475_-130907569","id":"20210203-003317_898490913","dateCreated":"2021-02-03T00:33:17+0530","dateStarted":"2021-02-03T01:29:30+0530","dateFinished":"2021-02-03T01:29:30+0530","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:344"},{"text":"%spark2.pyspark\n# loading the required libraries to create spark session and date functions\nfrom pyspark.sql import SparkSession\nfrom datetime import date,timedelta\nfrom dateutil.relativedelta import relativedelta","user":"vinay.hugar","dateUpdated":"2021-02-03T01:30:10+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1612205915216_-1880112366","id":"20210202-002835_1119481994","dateCreated":"2021-02-02T00:28:35+0530","dateStarted":"2021-02-03T01:30:10+0530","dateFinished":"2021-02-03T01:30:10+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:345"},{"text":"%spark2.pyspark\n#creating spark sessiion which connects this notebook to spark cluster\nspark = (SparkSession.builder.appName('spark_sql')\n                .enableHiveSupport()\n                .getOrCreate()\n                )","user":"vinay.hugar","dateUpdated":"2021-02-03T00:37:54+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1612205952441_933930161","id":"20210202-002912_94952446","dateCreated":"2021-02-02T00:29:12+0530","dateStarted":"2021-02-03T00:37:54+0530","dateFinished":"2021-02-03T00:37:54+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:346"},{"text":"%spark2.pyspark\n#defining dates\nED=date.today()- relativedelta(days=1)\nSD=ED - relativedelta(months=12)\nSD1=ED - relativedelta(months=1)\nprint(ED)\nprint(SD)\nprint(SD1)\nname='vh'","user":"vinay.hugar","dateUpdated":"2021-02-03T00:19:25+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1612206028750_-1058496658","id":"20210202-003028_617423569","dateCreated":"2021-02-02T00:30:28+0530","dateStarted":"2021-02-03T00:19:25+0530","dateFinished":"2021-02-03T00:19:25+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:347"},{"text":"%spark2.pyspark\n# Below command will display the existing database's in HIVE\n# spark.sql is inbuilt function of spark which is directly connected to hive which acts as datawarehouse for the data residing on HDFS\nspark.sql(\"show databases\").show()","user":"vinay.hugar","dateUpdated":"2021-02-03T00:43:19+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1612251370622_-170275033","id":"20210202-130610_1328764921","dateCreated":"2021-02-02T13:06:10+0530","dateStarted":"2021-02-03T00:43:20+0530","dateFinished":"2021-02-03T00:43:20+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:348"},{"text":"%spark2.pyspark\n# selecting the required database\nspark.sql(\"use cvmprod\")","user":"vinay.hugar","dateUpdated":"2021-02-03T00:44:04+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1612251447332_482730887","id":"20210202-130727_624014222","dateCreated":"2021-02-02T13:07:27+0530","dateStarted":"2021-02-02T23:40:41+0530","dateFinished":"2021-02-02T23:40:41+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:349"},{"text":"%spark2.pyspark\n# listing the tables from cvmprod\nspark.sql(\"show tables\").show(20)","user":"vinay.hugar","dateUpdated":"2021-02-03T00:45:17+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1612264744948_-1372885753","id":"20210202-164904_506294610","dateCreated":"2021-02-02T16:49:04+0530","dateStarted":"2021-02-02T23:40:47+0530","dateFinished":"2021-02-02T23:40:48+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:350"},{"text":"%spark2.pyspark\nspark.sql(\"select * from tn_itm_rev_hc\").show()","user":"vinay.hugar","dateUpdated":"2021-02-02T23:41:01+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1612207064955_-1595738224","id":"20210202-004744_476724027","dateCreated":"2021-02-02T00:47:44+0530","dateStarted":"2021-02-02T23:41:02+0530","dateFinished":"2021-02-02T23:41:06+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:351"},{"text":"%spark2.pyspark\nspark.sql(\"\"\"select distinct CARD_NUM , INV_DATE, INV_TIME, STORE_NAME, STORE_CODE, LOCN_NAME, REGION \n             from tn_itm_rev_hc order by INV_DATE desc, INV_TIME desc\"\"\").show()","user":"vinay.hugar","dateUpdated":"2021-02-03T00:53:47+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sasprdos.lmggi.com:4046/jobs/job?id=32"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1612258814256_-613433218","id":"20210202-151014_2098191640","dateCreated":"2021-02-02T15:10:14+0530","dateStarted":"2021-02-03T00:53:47+0530","dateFinished":"2021-02-03T00:54:48+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:352"},{"text":"%spark2.pyspark\nspark.sql(\"\"\"select card_num,min(inv_date) as first_date,max(inv_date) as last_date,count(distinct inv_num) as transactions,\n                  round(sum(item_net_amt),2) as rev,\n                  sum(ITEM_QTY) as QTY from cvmprod.tn_itm_rev_hc group by card_num\"\"\").show()\n                  ","user":"vinay.hugar","dateUpdated":"2021-02-03T00:55:21+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sasprdos.lmggi.com:4046/jobs/job?id=33"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1612206198517_-1763044008","id":"20210202-003318_1638029131","dateCreated":"2021-02-02T00:33:18+0530","dateStarted":"2021-02-03T00:55:22+0530","dateFinished":"2021-02-03T00:56:29+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:353"},{"text":"%spark2.pyspark\nspark.sql(\"\"\"Select A.CARD_NUM\n         , Case when datediff(last_day(add_months(current_date() , -1)),(max(A.INV_DATE))) <=90 then 1 Else 0 end as ACTIVE_FLAG\n         , Case when datediff(last_day(add_months(current_date() , -1)),(max(A.INV_DATE))) between 91 and 180 then 1 Else 0 end as DORMANT_FLAG\n         , Case when datediff(last_day(add_months(current_date() , -1)),(max(A.INV_DATE))) between 181 and 365 then 1 Else 0 end as LAPSED_FLAG\n         , Case when datediff(last_day(add_months(current_date() , -1)),(max(A.INV_DATE))) >365 then 1 Else 0 end as INACTIVE_FLAG\n         , datediff(last_day(add_months(current_date() , -1)),(max(A.INV_DATE))) AS RECENCY\n         , datediff(max(a.inv_date),min(a.inv_date))/(count(distinct a.inv_date)-1)  AS LATENCY\n         , (datediff(last_day(add_months(current_date() , -1)),(max(A.INV_DATE))) / datediff(max(a.inv_date),min(a.inv_date))/(count(distinct a.inv_date)-1))  AS R_L_RATIO\n    from cvmprod.tn_itm_rev_hc as A\n    Where A.INV_DATE between '\"\"\"+str(SD)+\"\"\"' and '\"\"\"+str(ED)+\"\"\"'  and A.CARD_NUM is not null\n    Group by A.CARD_NUM\"\"\").show()","user":"vinay.hugar","dateUpdated":"2021-02-02T17:09:02+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1612264185315_-696575592","id":"20210202-163945_79215037","dateCreated":"2021-02-02T16:39:45+0530","dateStarted":"2021-02-02T17:09:03+0530","dateFinished":"2021-02-02T17:10:02+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:354"},{"text":"%spark2.pyspark\n# creating table in hive using spark.sql\nspark.sql(\"\"\"Create table MX_PET_Profile_detail_1\"\"\"+name+\"\"\" as\n    Select A.CARD_NUM\n         , Case when datediff(last_day(add_months(current_date() , -1)),(max(A.INV_DATE))) <=90 then 1 Else 0 end as ACTIVE_FLAG\n         , Case when datediff(last_day(add_months(current_date() , -1)),(max(A.INV_DATE))) between 91 and 180 then 1 Else 0 end as DORMANT_FLAG\n         , Case when datediff(last_day(add_months(current_date() , -1)),(max(A.INV_DATE))) between 181 and 365 then 1 Else 0 end as LAPSED_FLAG\n         , Case when datediff(last_day(add_months(current_date() , -1)),(max(A.INV_DATE))) >365 then 1 Else 0 end as INACTIVE_FLAG\n         , datediff(last_day(add_months(current_date() , -1)),(max(A.INV_DATE))) AS RECENCY\n         , datediff(max(a.inv_date),min(a.inv_date))/(count(distinct a.inv_date)-1)  AS LATENCY\n         , (datediff(last_day(add_months(current_date() , -1)),(max(A.INV_DATE))) / datediff(max(a.inv_date),min(a.inv_date))/(count(distinct a.inv_date)-1))  AS R_L_RATIO\n    from cvmprod.tn_itm_rev_hc as A\n    Where A.INV_DATE between '\"\"\"+str(SD)+\"\"\"' and '\"\"\"+str(ED)+\"\"\"'  and A.CARD_NUM is not null\n    Group by A.CARD_NUM\"\"\")\n","user":"vinay.hugar","dateUpdated":"2021-02-03T00:47:45+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sasprdos.lmggi.com:4046/jobs/job?id=30"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1612249577418_-80158772","id":"20210202-123617_2051897761","dateCreated":"2021-02-02T12:36:17+0530","dateStarted":"2021-02-03T00:32:01+0530","dateFinished":"2021-02-03T00:33:51+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:355"},{"text":"%spark2.pyspark\nspark.sql(\"select * from MX_PET_Profile_detail_1\"+name+\" limit 10\").show()","user":"vinay.hugar","dateUpdated":"2021-02-03T00:29:23+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sasprdos.lmggi.com:4046/jobs/job?id=29"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1612253206825_-1375917839","id":"20210202-133646_1940249019","dateCreated":"2021-02-02T13:36:46+0530","dateStarted":"2021-02-03T00:29:24+0530","dateFinished":"2021-02-03T00:29:39+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:356"},{"text":"%spark2.pyspark\ndf=spark.sql(\"select * from MX_PET_Profile_detail_1\"+name+\" limit 10\")\ndf.write.csv(\"hc_cust_profile.csv\")","user":"vinay.hugar","dateUpdated":"2021-02-02T17:15:03+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1612253568782_371591265","id":"20210202-134248_1299968879","dateCreated":"2021-02-02T13:42:48+0530","dateStarted":"2021-02-02T17:15:03+0530","dateFinished":"2021-02-02T17:15:03+0530","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:357"},{"text":"%spark2.pyspark\nspark.sql(\"drop table MX_PET_Profile_detail_1\"+name)","user":"vinay.hugar","dateUpdated":"2021-02-03T00:31:50+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1612264703070_-1736337341","id":"20210202-164823_1558801674","dateCreated":"2021-02-02T16:48:23+0530","dateStarted":"2021-02-03T00:31:50+0530","dateFinished":"2021-02-03T00:31:51+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:358"},{"text":"%spark2.pyspark\nspark.sql(\"\"\"Select A.CARD_NUM\n         , SUM(A.ITEM_QTY) AS UNITS_1M\n         , SUM(case when A.ITEM_TRAN_TYPE = 'R' then A.ITEM_QTY else 0 end) as UNITS_RTRN_1M\n         , SUM(case when A.STORE_NAME like '%LOIPL%' then A.ITEM_QTY else 0 end) AS ONLINE_UNITS_1M\n         , SUM(case when A.STORE_NAME like '%LOIPL%' and A.ITEM_TRAN_TYPE = 'R' then A.ITEM_QTY else 0 end) AS ONLINE_UNITS_RTRN_1M\n         , SUM(A.ITEM_GROSS_AMT) AS REVENUE_INR_1M\n         , SUM(case when A.ITEM_DISC_IND = 1 then A.ITEM_GROSS_AMT else 0 end) AS REVENUE_INR_SALE_1M\n         , SUM(case when A.ITEM_TRAN_TYPE = 'R' then A.ITEM_GROSS_AMT else 0 end) AS REVENUE_INR_RTRN_1M\n         , SUM(case when A.STORE_NAME like '%LOIPL%' then A.ITEM_GROSS_AMT else 0 end) AS ONLINE_REVENUE_INR_1M\n         , SUM(case when A.STORE_NAME like '%LOIPL%' and A.ITEM_TRAN_TYPE = 'R' then A.ITEM_GROSS_AMT else 0 end) AS ONLINE_REVENUE_INR_RTRN_1M\n         , SUM(A.ITEM_CP) AS RETAIL_COGS_INR_1M\n         , SUM(A.ITEM_BASIC_PTS) AS BASE_POINTS_ACCRUED_1M\n         , MIN(A.INV_DATE) AS FST_TN_DT_1M\n         , MAX(A.INV_DATE) AS LST_TN_DT_1M\n         , COUNT(distinct case when A.ITEM_TRAN_TYPE = 'S' then A.INV_DATE end) AS TRIPS_1M\n         , COUNT(distinct case when A.STORE_NAME like '%LOIPL%' and A.ITEM_TRAN_TYPE = 'S' then A.INV_DATE end) AS ONLINE_TRIPS_1M\n         , COUNT(distinct case when A.ITEM_TRAN_TYPE = 'S' then A.INV_NUM end) AS INVOICES_PUR_1M\n         , COUNT(distinct case when A.ITEM_TRAN_TYPE = 'R' then A.INV_NUM end) AS INVOICES_RTRN_1M\n         , COUNT(distinct case when A.STORE_NAME like '%LOIPL%' and A.ITEM_TRAN_TYPE = 'S' then A.INV_NUM end) AS ONLINE_INVOICES_PUR_1M\n         , COUNT(distinct case when A.STORE_NAME like '%LOIPL%' and A.ITEM_TRAN_TYPE = 'R' then A.INV_NUM end) AS ONLINE_INVOICES_RTRN_1M\n         , COUNT(distinct (A.ITEM_CODE)) AS UNQ_ITEMS_1M\n         , COUNT(distinct (A.ITEM_DEPT_CODE)) AS UNQ_DEPTS_1M\n         , COUNT(distinct (A.GROUP_KEY)) AS UNQ_GROUPS_1M\n         , COUNT(distinct (A.BRAND_KEY)) AS UNQ_BRANDS_1M\n    From TN_ITM_REV_HC as A\n     Where A.INV_DATE between '\"\"\"+str(SD1)+\"\"\"' and '\"\"\"+str(ED)+\"\"\"'  and A.CARD_NUM is not null\n    Group by A.CARD_num\"\"\").show()","user":"vinay.hugar","dateUpdated":"2021-02-03T00:22:01+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1612266349650_-785430367","id":"20210202-171549_1502909068","dateCreated":"2021-02-02T17:15:49+0530","dateStarted":"2021-02-03T00:22:02+0530","dateFinished":"2021-02-03T00:23:12+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:359"},{"text":"%spark2.pyspark\nspark.sql(\"select STORE_NAME,(split(STORE_NAME,' - ')[0]) as concept ,(split(STORE_NAME,' - ')[1]) as storename,(split(STORE_NAME,' - ')[2]) as storeid   from tn_itm_rev_hc\").show()","user":"vinay.hugar","dateUpdated":"2021-02-02T16:06:40+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1612253022051_1755749670","id":"20210202-133342_1546702718","dateCreated":"2021-02-02T13:33:42+0530","dateStarted":"2021-02-02T16:06:40+0530","dateFinished":"2021-02-02T16:06:41+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:360"},{"text":"%spark2.pyspark\nspark.sql(\"\"\"select a.card_num,a.inv_num,a.item_code,a.item_net_amt,a.item_qty,b.division,b.division_key \n            from tn_itm_rev_hc as a \n            left join lmi_itm_mstr as  b on a.item_code=b.item_key\"\"\").show()","user":"vinay.hugar","dateUpdated":"2021-02-03T01:25:13+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1612295699150_-868433902","id":"20210203-012459_673523185","dateCreated":"2021-02-03T01:24:59+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:361"},{"text":"%spark2.pyspark\ndef get_data(file_location,file_type,infer_schema):\n  #first_row_is_header = \"true\"\n  delimiter = \",\"\n  df = spark.read.format(file_type) \\\n  .option(\"inferSchema\", infer_schema) \\\n  .option(\"header\", 'true') \\\n  .option(\"sep\", delimiter) \\\n  .load(file_location)\n  return df\n\ndf=get_data('/user/swati.rani/TN_ITM_REV_HC_ORC_1.orc','orc','false')\ndf.show()","user":"vinay.hugar","dateUpdated":"2021-02-03T01:08:22+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sasprdos.lmggi.com:4046/jobs/job?id=47"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1612208185526_146086074","id":"20210202-010625_1040912413","dateCreated":"2021-02-02T01:06:25+0530","dateStarted":"2021-02-03T01:08:22+0530","dateFinished":"2021-02-03T01:08:23+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:362"},{"text":"%spark2.pyspark\ndf.createOrReplaceTempView('df_temp')","user":"vinay.hugar","dateUpdated":"2021-02-03T01:08:36+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1612294712143_-553699565","id":"20210203-010832_1405528495","dateCreated":"2021-02-03T01:08:32+0530","dateStarted":"2021-02-03T01:08:36+0530","dateFinished":"2021-02-03T01:08:36+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:363"},{"text":"%spark2.pyspark\ndf2=spark.sql(\"\"\"select card_num,count(distinct inv_num) as transactions,round(sum(item_net_amt),2) as rev,sum(ITEM_QTY) as QTY,\n               count(distinct ITEM_CODE) as items,count(distinct INV_DATE) as dates  \n               from df_temp group by card_num\"\"\")\ndf2.show()","user":"vinay.hugar","dateUpdated":"2021-02-03T01:09:31+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sasprdos.lmggi.com:4046/jobs/job?id=48"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1612208527129_1034619322","id":"20210202-011207_1675057795","dateCreated":"2021-02-02T01:12:07+0530","dateStarted":"2021-02-03T01:09:32+0530","dateFinished":"2021-02-03T01:12:27+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:364"},{"text":"%spark2.pyspark\nspark.sql(\"select corr(ITEM_DISC_AMT,ITEM_QTY) from tn_itm_rev_hc\").show()","user":"vinay.hugar","dateUpdated":"2021-02-02T23:41:31+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1612288602935_-922021774","id":"20210202-232642_547969454","dateCreated":"2021-02-02T23:26:42+0530","dateStarted":"2021-02-02T23:41:32+0530","dateFinished":"2021-02-02T23:41:41+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:365"},{"text":"%spark2.pyspark\nspark.sql(\"select distinct DEPARTMENT,REGEXP_REPLACE(DEPARTMENT,'HC-','') from tn_itm_rev_hc\").show()","user":"vinay.hugar","dateUpdated":"2021-02-02T23:50:19+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"runtimeInfos":{},"apps":[],"jobName":"paragraph_1612289638133_-1040034052","id":"20210202-234358_141576491","dateCreated":"2021-02-02T23:43:58+0530","dateStarted":"2021-02-02T23:50:20+0530","dateFinished":"2021-02-02T23:50:45+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:366"},{"text":"%spark2.sql\nselect card_num,count(distinct inv_num) as transactions,round(sum(item_net_amt),2) as rev,sum(ITEM_QTY) as QTY from cvmprod.tn_itm_rev_hc group by card_num limit 10\n","user":"vinay.hugar","dateUpdated":"2021-02-03T01:23:25+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"card_num":"string","transactions":"string","rev":"string","QTY":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1612210162486_1086351794","id":"20210202-013922_782951043","dateCreated":"2021-02-02T01:39:22+0530","dateStarted":"2021-02-02T01:44:57+0530","dateFinished":"2021-02-02T01:46:00+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:367"},{"text":"%spark2.sql\nSelect A.CARD_NUM\n         , SUM(A.ITEM_QTY) AS UNITS_1M\n         , SUM(case when A.ITEM_TRAN_TYPE = 'R' then A.ITEM_QTY else 0 end) as UNITS_RTRN_1M\n         , SUM(case when A.STORE_NAME like '%LOIPL%' then A.ITEM_QTY else 0 end) AS ONLINE_UNITS_1M\n         , SUM(case when A.STORE_NAME like '%LOIPL%' and A.ITEM_TRAN_TYPE = 'R' then A.ITEM_QTY else 0 end) AS ONLINE_UNITS_RTRN_1M\n         , SUM(A.ITEM_GROSS_AMT) AS REVENUE_INR_1M\n         , SUM(case when A.ITEM_DISC_IND = 1 then A.ITEM_GROSS_AMT else 0 end) AS REVENUE_INR_SALE_1M\n         , SUM(case when A.ITEM_TRAN_TYPE = 'R' then A.ITEM_GROSS_AMT else 0 end) AS REVENUE_INR_RTRN_1M\n         , SUM(case when A.STORE_NAME like '%LOIPL%' then A.ITEM_GROSS_AMT else 0 end) AS ONLINE_REVENUE_INR_1M\n         , SUM(case when A.STORE_NAME like '%LOIPL%' and A.ITEM_TRAN_TYPE = 'R' then A.ITEM_GROSS_AMT else 0 end) AS ONLINE_REVENUE_INR_RTRN_1M\n         , SUM(A.ITEM_CP) AS RETAIL_COGS_INR_1M\n         , SUM(A.ITEM_BASIC_PTS) AS BASE_POINTS_ACCRUED_1M\n         , MIN(A.INV_DATE) AS FST_TN_DT_1M\n         , MAX(A.INV_DATE) AS LST_TN_DT_1M\n         , COUNT(distinct case when A.ITEM_TRAN_TYPE = 'S' then A.INV_DATE end) AS TRIPS_1M\n         , COUNT(distinct case when A.STORE_NAME like '%LOIPL%' and A.ITEM_TRAN_TYPE = 'S' then A.INV_DATE end) AS ONLINE_TRIPS_1M\n         , COUNT(distinct case when A.ITEM_TRAN_TYPE = 'S' then A.INV_NUM end) AS INVOICES_PUR_1M\n         , COUNT(distinct case when A.ITEM_TRAN_TYPE = 'R' then A.INV_NUM end) AS INVOICES_RTRN_1M\n         , COUNT(distinct case when A.STORE_NAME like '%LOIPL%' and A.ITEM_TRAN_TYPE = 'S' then A.INV_NUM end) AS ONLINE_INVOICES_PUR_1M\n         , COUNT(distinct case when A.STORE_NAME like '%LOIPL%' and A.ITEM_TRAN_TYPE = 'R' then A.INV_NUM end) AS ONLINE_INVOICES_RTRN_1M\n         , COUNT(distinct (A.ITEM_CODE)) AS UNQ_ITEMS_1M\n         , COUNT(distinct (A.ITEM_DEPT_CODE)) AS UNQ_DEPTS_1M\n         , COUNT(distinct (A.GROUP_KEY)) AS UNQ_GROUPS_1M\n         , COUNT(distinct (A.BRAND_KEY)) AS UNQ_BRANDS_1M\n    From TN_ITM_REV_HC as A\n     Where A.INV_DATE between date_add(last_day(add_months(current_date() , -13)),1) and last_day(add_months(current_date() , -1))  and A.CARD_NUM is not null\n    Group by A.CARD_num","user":"vinay.hugar","dateUpdated":"2021-02-03T01:21:10+0530","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"CARD_NUM":"string","UNITS_1M":"string","UNITS_RTRN_1M":"string","ONLINE_UNITS_1M":"string","ONLINE_UNITS_RTRN_1M":"string","REVENUE_INR_1M":"string","REVENUE_INR_SALE_1M":"string","REVENUE_INR_RTRN_1M":"string","ONLINE_REVENUE_INR_1M":"string","ONLINE_REVENUE_INR_RTRN_1M":"string","RETAIL_COGS_INR_1M":"string","BASE_POINTS_ACCRUED_1M":"string","FST_TN_DT_1M":"string","LST_TN_DT_1M":"string","TRIPS_1M":"string","ONLINE_TRIPS_1M":"string","INVOICES_PUR_1M":"string","INVOICES_RTRN_1M":"string","ONLINE_INVOICES_PUR_1M":"string","ONLINE_INVOICES_RTRN_1M":"string","UNQ_ITEMS_1M":"string","UNQ_DEPTS_1M":"string","UNQ_GROUPS_1M":"string","UNQ_BRANDS_1M":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sasprdos.lmggi.com:4046/jobs/job?id=49","http://sasprdos.lmggi.com:4046/jobs/job?id=50","http://sasprdos.lmggi.com:4046/jobs/job?id=51","http://sasprdos.lmggi.com:4046/jobs/job?id=52","http://sasprdos.lmggi.com:4046/jobs/job?id=53"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1612247217626_1464194667","id":"20210202-115657_1385956546","dateCreated":"2021-02-02T11:56:57+0530","dateStarted":"2021-02-03T01:21:11+0530","dateFinished":"2021-02-03T01:24:37+0530","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:368"}],"name":"spark_sql","id":"2FXB1R9QZ","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark2:vinay.hugar:2FXB1R9QZ":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}